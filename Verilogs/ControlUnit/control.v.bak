module control(
  PreInstruction,
  RegD, RegA, RegB,
  OffImmed,
  controlEM, controlRB, controlMDH, controlRB, controlMAH, controlMUX, controlSE2, controlSE1,
  controlBS, controlALU, ID,
  NALU, CALU, VALU, ZALU, NBS, ZBS, CBS, VBS,
  NEG, ZER, CAR, OVERF, MODE,
  reset, clock, enable, take
  );

  input NALU, ZALU, CALU, VALU, NBS, ZBS, CBS, VBS, clock, reset;
  input [3:0] RegD, RegA, RegB;
  input [15:0] PreInstruction;

  output NEG, ZER, CAR, OVERF, MODE, enable, controlMUX, take;
  output [2:0] controlEM, controlMDH, controlMAH, controlSE1, controlSE2;
  output [3:0] controlRB, controlALU, controlBS;
  output [6:0] ID;

  wire [15:0] Instruction;
  wire [3:0] cond;

  InstructionRegister ir(clock, PreInstruction, Instruction);
  instructiondecoder idec(Instruction, ID, RegD, RegA, RegB, OffImmed, cond);
  Ramifier branchtaker(cond, NEG, ZER, CAR, OVERF, take);
  controlcore core (clock, reset, ID, take, enable, NEG, ZER, CAR, OVERF, MODE, NALU, ZALU, CALU, VALU
    NBS, ZBS, CBS, VBS, controlALU, controlBS, controlEM, controlRB, controlSE1, controlSE2, controlMAH, controlMDH, controlMUX);
  



endmodule
